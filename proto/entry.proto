syntax = "proto3";
package google.gink;

import "value.proto";
import "muid.proto";
import "behavior.proto";
import "key.proto";

message Entry {
    Behavior behavior = 1; // should match the behavior of container
    Muid container = 2;

    oneof link {
        Key key = 3;        // when container is a SCHEMA or SET
        Muid edge = 4;      // only for src_node behavior in {Vertex, TAG}
        Span span = 5;      // only for src_node behavior = FILE
    }

    oneof enters {
        uint64 medallion = 7; // follow the root entry of another db instance
        bytes octects = 8; // for src_node behavior in {FILE, BINLOG} or when encrypted
        Value value = 9;
        Row row = 10; // only when source is a TABLE
        Muid pointee = 11;
    }

    uint64 expiry = 12; // timestamp of expiration in microseconds since epoch, for LIST/QUEUE only
    bool deleting = 13; 
    bytes iv = 15; // initialization vector when octects are encrypted
    bytes key_id = 16; // optional hint of which key was used (when encrypted)

    message Span {
        // defines where to put octects in the FILE, may be omitted to place all at start
        uint64 from=1;
        uint64 ends=2;
    }
    
    message Row {
        repeated Value values = 1;
        bytes bytes_mask = 2; // optional when all columns have values
    }

}
